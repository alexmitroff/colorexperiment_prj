# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2017-10-31 16:38
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import experiment.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=experiment.models.image_path)),
            ],
            options={
                'verbose_name': 'Изображение',
                'verbose_name_plural': 'Изображения',
                'ordering': ['itype'],
            },
        ),
        migrations.CreateModel(
            name='ImageType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pos', models.PositiveIntegerField(default=0, verbose_name='позиция')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Тип изображения',
                'verbose_name_plural': 'Типы изображений',
                'ordering': ['pos'],
            },
        ),
        migrations.CreateModel(
            name='Stimul',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pos', models.PositiveIntegerField(default=0, verbose_name='позиция')),
                ('show', models.BooleanField(default=True, verbose_name='доступен')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Информация о подопытном',
                'verbose_name_plural': 'Информация о подопытных',
                'ordering': ['show', 'pos'],
            },
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lastname', models.CharField(max_length=50, verbose_name='фамилия')),
                ('firstname', models.CharField(max_length=50, verbose_name='имя')),
                ('gender', models.IntegerField(choices=[(0, 'Мужской'), (1, 'Женский')], default=0, verbose_name='пол')),
                ('age', models.PositiveIntegerField(default=0, verbose_name='возраст')),
                ('edu_type', models.IntegerField(choices=[(0, 'Гумунитарный'), (1, 'Технический')], default=0, verbose_name='тип образования')),
                ('edu', models.IntegerField(choices=[(0, 'Отсутвует'), (1, 'Среднее'), (2, 'Среднее специальное'), (3, 'Высшее профессиональное')], default=0, verbose_name='образование')),
                ('art_exp', models.BooleanField(default=False, verbose_name='художественная подготовка')),
                ('edu_prof', models.CharField(max_length=140, verbose_name='профиль подготовки')),
                ('email', models.EmailField(max_length=254, verbose_name='электронная почта')),
                ('phone', models.PositiveIntegerField(blank=True, null=True, verbose_name='телефон')),
                ('cinema_freq', models.PositiveIntegerField(default=0, verbose_name='частота походов в кинотеатр')),
                ('cinema_genre', models.CharField(max_length=140, verbose_name='любимый жанр кино')),
            ],
            options={
                'verbose_name': 'Информация о подопытном',
                'verbose_name_plural': 'Информация о подопытных',
                'ordering': ['lastname', 'firstname'],
            },
        ),
        migrations.AddField(
            model_name='stimul',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='experiment.UserInfo'),
        ),
        migrations.AddField(
            model_name='image',
            name='itype',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='experiment.ImageType'),
        ),
    ]
